/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null || head.next==null)
            return head;
            
        //merge sort
        ListNode slow=head, fast=head;
        while(fast.next!=null&& fast.next.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        ListNode head2 = slow.next;
        slow.next=null;
        
        ListNode list1 = sortList(head);
        ListNode list2 = sortList(head2);
        return merge(list1, list2);
    }
    
    private ListNode merge(ListNode head1, ListNode head2){
        ListNode dummy = new ListNode(0), tmp=dummy;
        while(head1!=null && head2!=null){
            if(head1.val<head2.val){
                tmp.next=head1;
                head1=head1.next;
            }else{
                tmp.next=head2;
                head2=head2.next;
            }
            tmp=tmp.next;
        }
        
        if(head2!=null)
            tmp.next=head2;
        else if(head1!=null)
            tmp.next=head1;
            
        return dummy.next;    
    }
}